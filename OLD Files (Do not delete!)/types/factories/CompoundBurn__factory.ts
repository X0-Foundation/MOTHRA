/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundBurn, CompoundBurnInterface } from "../CompoundBurn";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022273803806200222783398101604081905262000034916200085f565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620008a0565b620000ee90600a620009c5565b6200014b565b5062000ac0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b8152600401620001989190620009d6565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200030c565b6000620001cb846200044c565b9050801562000238578060066000828254620001e8919062000a2e565b90915550506001600160a01b038416600090815260026020526040812080548392906200021790849062000a2e565b92505081905550806003600082825462000232919062000a2e565b90915550505b60045462000247904362000a2e565b6001600160a01b0385166000908152600860205260409020600201558115620002bb576001600160a01b038416600090815260026020526040812080548592906200029490849062000a48565b925050819055508260036000828254620002af919062000a48565b90915550620003069050565b6001600160a01b03841660009081526002602052604081208054859290620002e590849062000a2e565b92505081905550826003600082825462000300919062000a2e565b90915550505b50505050565b60006005546004544362000321919062000a2e565b6200032d919062000a2e565b90508015620004495760006006546003546200034a919062000a2e565b600c5490915060009081906001600160a01b0316635aff34dc6200037461058e620f424062000a2e565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101879052600a60648201526084016040805180830381865afa158015620003c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ed919062000a63565b9150915060006200040b848484620005a260201b62000a191760201c565b62000417908562000a2e565b905080600660008282546200042d919062000a48565b909155505060045462000441904362000a2e565b600555505050505b50565b6001600160a01b038116600090815260086020526040812060020154600454829182916200047b904362000a2e565b62000487919062000a2e565b905080156200059b57600c5460009081906001600160a01b0316635aff34dc620004b761058e620f424062000a2e565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa1580156200050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000530919062000a63565b915091506200057160026000886001600160a01b03166001600160a01b03168152602001908152602001600020548383620005a260201b62000a191760201c565b6001600160a01b03871660009081526002602052604090205462000596919062000a2e565b935050505b5092915050565b600080620005b2858585620005ea565b90506000620005c3868686620006e0565b1115620005e057620005d7816001620006fe565b915050620005e3565b90505b9392505050565b60008080620005fa868662000715565b9150915081600003620006245783818162000619576200061962000a88565b0492505050620005e3565b83821015620006db5760006200063c878787620006e0565b90506000806200064e85858562000769565b91509150816000036200067b578681816200066d576200066d62000a88565b0495505050505050620005e3565b6000876200068a82826200079f565b16905060006200069c848484620007ad565b90506000620006bd838b81620006b657620006b662000a88565b0462000804565b9050620006cb828262000842565b98505050505050505050620005e3565b600080fd5b60008180620006f357620006f362000a88565b838509949350505050565b60006200070c828462000a48565b90505b92915050565b6000808062000725858562000850565b9050600062000735868662000842565b90508082106200074d57908190039250905062000762565b60016200075b83836200079f565b0393509150505b9250929050565b60008082841062000781575083905081830362000797565b60001985016200079285856200079f565b915091505b935093915050565b60006200070c828462000a2e565b600080620007d983620007c183826200079f565b81620007d157620007d162000a88565b506000919050565b9050828481620007ed57620007ed62000a88565b04620007fa868362000842565b1795945050505050565b60006001815b60088110156200059b5762000837826200083160026200082b838962000842565b6200079f565b62000842565b91506001016200080a565b60006200070c828462000a9e565b60006000198284099392505050565b6000602082840312156200087257600080fd5b81516001600160a01b0381168114620005e357600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008c057620008c06200088a565b019392505050565b600181815b8085111562000909578160001904821115620008ed57620008ed6200088a565b80851615620008fb57918102915b93841c9390800290620008cd565b509250929050565b60008262000922575060016200070f565b8162000931575060006200070f565b81600181146200094a5760028114620009555762000975565b60019150506200070f565b60ff8411156200096957620009696200088a565b50506001821b6200070f565b5060208310610133831016604e8410600b84101617156200099a575081810a6200070f565b620009a68383620008c8565b8060001904821115620009bd57620009bd6200088a565b029392505050565b60006200070c60ff84168362000911565b600060208083528351808285015260005b8181101562000a0557858101830151858201604001528201620009e7565b8181111562000a18576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000a435762000a436200088a565b500390565b6000821982111562000a5e5762000a5e6200088a565b500190565b6000806040838503121562000a7757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000abb5762000abb6200088a565b500290565b6117578062000ad06000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103ce578063db1d0fd5146103d7578063dd62ed3e146103df578063f2fde38b1461041857600080fd5b8063a457c2d714610378578063a9059cbb1461038b578063bdfeb1e51461039e57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031757806395d89b41146103325780639dc29fac14610352578063a150da2a1461036557600080fd5b806370a08231146102f4578063715018a614610307578063739572891461030f57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a857806357627e93146102db57806366666aa9146102e35780636863909e146102ec57600080fd5b806332cb6b0c14610278578063395093511461028057806340c10f191461029357600080fd5b806323b872dd116101a257806323b872dd1461023c5780632e0f26251461024f5780632ff2e9dc14610269578063313ce5671461027157600080fd5b806306fdde03146101c9578063095ea7b31461020357806318160ddd14610226575b600080fd5b60408051808201909152600c81526b21b7b6b837bab732213ab93760a11b60208201525b6040516101fa91906113ef565b60405180910390f35b610216610211366004611460565b61042b565b60405190151581526020016101fa565b61022e610442565b6040519081526020016101fa565b61021661024a36600461148a565b610451565b610257601281565b60405160ff90911681526020016101fa565b61022e6104f4565b6012610257565b61022e61050e565b61021661028e366004611460565b610530565b6102a66102a1366004611460565b61053d565b005b6102bb6102b63660046114c6565b6105ec565b6040805194855260208501939093529183015260608201526080016101fa565b61022e601e81565b61022e60065481565b6102a661062d565b61022e6103023660046114c6565b61074e565b6102a6610759565b6102bb61078f565b6000546040516001600160a01b0390911681526020016101fa565b60408051808201909152600481526321a2a12760e11b60208201526101ed565b6102a6610360366004611460565b610888565b61021661037336600461148a565b6108bc565b610216610386366004611460565b610948565b610216610399366004611460565b610955565b6103a6610962565b604080519586526020860194909452928401919091526060830152608082015260a0016101fa565b61022e60075481565b61022e600c81565b61022e6103ed3660046114e1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a66104263660046114c6565b610981565b6000610438338484610a57565b5060015b92915050565b600061044c610b19565b905090565b60006001600160a01b03841633146104de576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104dc5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e9848484610b30565b5060015b9392505050565b6105006012600861152a565b61050b90600a611633565b81565b61051a6012600861152a565b61052590600a611633565b61050b90600a611642565b60006104ed338484610c3c565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016104d390611661565b6105736012600861152a565b61057e90600a611633565b61058990600a611642565b81610592610b19565b61059c9190611696565b11156105de5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d3565b6105e88282610cc3565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062485610d1a565b90509193509193565b60006005546004544361064091906116ae565b61064a91906116ae565b9050801561074b57600060065460035461066491906116ae565b600c5490915060009081906001600160a01b0316635aff34dc61068c61058e620f42406116ae565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101879052600a60648201526084016040805180830381865afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070291906116c5565b915091506000610713848484610a19565b61071d90856116ae565b905080600660008282546107319190611696565b909155505060045461074390436116ae565b600555505050505b50565b600061043c82610e4c565b6000546001600160a01b031633146107835760405162461bcd60e51b81526004016104d390611661565b61078d6000610e7a565b565b60008060008061079d610eca565b93506107b96107b46000546001600160a01b031690565b610d1a565b6107c39084611696565b6009549093506107db906001600160a01b0316610d1a565b6107e59084611696565b600a549093506107fd906001600160a01b0316610d1a565b6108079084611696565b600b5490935061081f906001600160a01b0316610d1a565b6108299084611696565b92506000838510156108495761083f85856116ae565b9250839050610859565b61085384866116ae565b92508490505b801561088157806108748469d3c21bcecceda1000000611642565b61087e91906116ff565b91505b5090919293565b6000546001600160a01b031633146108b25760405162461bcd60e51b81526004016104d390611661565b6105e88282610fd6565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109095760405162461bcd60e51b81526004016104d391906113ef565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e990859085906109439086906116ae565b610a57565b60006104ed3384846108bc565b6000610438338484610b30565b6003546005546007546006546000610978610eca565b90509091929394565b6000546001600160a01b031633146109ab5760405162461bcd60e51b81526004016104d390611661565b6001600160a01b038116610a105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d3565b61074b81610e7a565b600080610a2785858561108a565b90506000610a36868686611160565b1115610a4f57610a4781600161117b565b9150506104ed565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610aa15760405162461bcd60e51b81526004016104d391906113ef565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610aec5760405162461bcd60e51b81526004016104d391906113ef565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b23610eca565b60035461044c91906116ae565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b7a5760405162461bcd60e51b81526004016104d391906113ef565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bc55760405162461bcd60e51b81526004016104d391906113ef565b506000610bd184610e4c565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c1d5760405162461bcd60e51b81526004016104d391906113ef565b50610c2a84836000611187565b610c3683836001611187565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610c895760405162461bcd60e51b81526004016104d391906113ef565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e99085908590610943908690611696565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d0d5760405162461bcd60e51b81526004016104d391906113ef565b506105e882826001611187565b6001600160a01b03811660009081526008602052604081206002015460045482918291610d4790436116ae565b610d5191906116ae565b90508015610e4557600c5460009081906001600160a01b0316635aff34dc610d7e61058e620f42406116ae565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df491906116c5565b6001600160a01b0388166000908152600260205260409020549193509150610e1d908383610a19565b6001600160a01b038716600090815260026020526040902054610e4091906116ae565b935050505b5092915050565b6000610e5782610d1a565b6001600160a01b03831660009081526002602052604090205461043c91906116ae565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060055460045443610ee091906116ae565b610eea91906116ae565b90508015610fc1576000600654600354610f0491906116ae565b600c5490915060009081906001600160a01b0316635aff34dc610f2c61058e620f42406116ae565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101879052600a60648201526084016040805180830381865afa158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa291906116c5565b91509150610fb1838383610a19565b610fbb90846116ae565b94505050505b81600654610fcf9190611696565b9250505090565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110205760405162461bcd60e51b81526004016104d391906113ef565b50600061102c83610e4c565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110785760405162461bcd60e51b81526004016104d391906113ef565b5061108583836000611187565b505050565b600080600061109986866112c7565b91509150816000036110be578381816110b4576110b46116e9565b04925050506104ed565b838210156101c45760006110d3878787611160565b90506000806110e3858585611314565b915091508160000361110b578681816110fe576110fe6116e9565b04955050505050506104ed565b60008761111960008a611345565b1690506000611129848484611351565b90506000611145838b8161113f5761113f6116e9565b0461139e565b905061115182826113d4565b985050505050505050506104ed565b60008180611170576111706116e9565b838509949350505050565b60006104ed8284611696565b61118f61062d565b600061119a84610d1a565b905080156112005780600660008282546111b491906116ae565b90915550506001600160a01b038416600090815260026020526040812080548392906111e19084906116ae565b9250508190555080600360008282546111fa91906116ae565b90915550505b60045461120d90436116ae565b6001600160a01b038516600090815260086020526040902060020155811561127b576001600160a01b03841660009081526002602052604081208054859290611257908490611696565b9250508190555082600360008282546112709190611696565b90915550610c369050565b6001600160a01b038416600090815260026020526040812080548592906112a39084906116ae565b9250508190555082600360008282546112bc91906116ae565b909155505050505050565b60008060006112d685856113e0565b905060006112e486866113d4565b90508082106112fa57908190039250905061130d565b60016113068383611345565b0393509150505b9250929050565b60008082841061132a575083905081830361133d565b600185036113388585611345565b915091505b935093915050565b60006104ed82846116ae565b60008061137883611363600086611345565b81611370576113706116e9565b506000919050565b9050828481611389576113896116e9565b0461139486836113d4565b1795945050505050565b60006001815b6008811015610e45576113ca826113c560026113c086896113d4565b611345565b6113d4565b91506001016113a4565b60006104ed8284611642565b60006000198284099392505050565b600060208083528351808285015260005b8181101561141c57858101830151858201604001528201611400565b8181111561142e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461145b57600080fd5b919050565b6000806040838503121561147357600080fd5b61147c83611444565b946020939093013593505050565b60008060006060848603121561149f57600080fd5b6114a884611444565b92506114b660208501611444565b9150604084013590509250925092565b6000602082840312156114d857600080fd5b6104ed82611444565b600080604083850312156114f457600080fd5b6114fd83611444565b915061150b60208401611444565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561154757611547611514565b019392505050565b600181815b8085111561158a57816000190482111561157057611570611514565b8085161561157d57918102915b93841c9390800290611554565b509250929050565b6000826115a15750600161043c565b816115ae5750600061043c565b81600181146115c457600281146115ce576115ea565b600191505061043c565b60ff8411156115df576115df611514565b50506001821b61043c565b5060208310610133831016604e8410600b841016171561160d575081810a61043c565b611617838361154f565b806000190482111561162b5761162b611514565b029392505050565b60006104ed60ff841683611592565b600081600019048311821515161561165c5761165c611514565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156116a9576116a9611514565b500190565b6000828210156116c0576116c0611514565b500390565b600080604083850312156116d857600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261171c57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200d11ee9e3be3ae4d1fc761932c8d1e047b11fb353ac855603d46eefbdd82cfe864736f6c634300080e0033";

export class CompoundBurn__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundBurn> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundBurn>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundBurn {
    return super.attach(address) as CompoundBurn;
  }
  connect(signer: Signer): CompoundBurn__factory {
    return super.connect(signer) as CompoundBurn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundBurnInterface {
    return new utils.Interface(_abi) as CompoundBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundBurn {
    return new Contract(address, _abi, signerOrProvider) as CompoundBurn;
  }
}
