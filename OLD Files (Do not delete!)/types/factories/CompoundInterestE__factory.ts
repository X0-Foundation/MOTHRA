/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundInterestE,
  CompoundInterestEInterface,
} from "../CompoundInterestE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002237380380620022378339810160408190526200003491620007d6565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600862000817565b620000ee90600a6200093c565b6200014b565b5062000a37565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200094d565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200037c565b6001600160a01b038316600090815260086020908152604080832054600754600284529184205490926200020492919064e8d4a510009062000a3b620004f2821b17901c565b620002109190620009a5565b905062000226600654826200053a60201b60201c565b6006556001600160a01b0384166000908152600260205260408120805483929062000253908490620009bf565b9250508190555080600360008282546200026e9190620009bf565b90915550508115620002cb576001600160a01b03841660009081526002602052604081208054859290620002a4908490620009bf565b925050819055508260036000828254620002bf9190620009bf565b90915550620003169050565b6001600160a01b03841660009081526002602052604081208054859290620002f5908490620009a5565b925050819055508260036000828254620003109190620009a5565b90915550505b6200035a60075460026000876001600160a01b03166001600160a01b031681526020019081526020016000205464e8d4a51000620004f260201b62000a3b1760201c565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060055460045443620003919190620009a5565b6200039d9190620009a5565b90508015620004ef57600c5460009081906001600160a01b0316635aff34dc620003cd61058e620f4240620009bf565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa15801562000420573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004469190620009da565b9150915060006003546200046960035485856200056360201b62000a791760201c565b620004759190620009a5565b905080600660008282546200048b9190620009bf565b9250508190555064e8d4a51000620004b564e8d4a510008585620004f260201b62000a3b1760201c565b620004c19190620009a5565b60076000828254620004d49190620009bf565b9091555050600454620004e89043620009a5565b6005555050505b50565b6000806200050285858562000563565b905060006200051386868662000659565b111562000530576200052781600162000677565b91505062000533565b90505b9392505050565b6000818311156200055957620005518284620009a5565b90506200055d565b5060005b92915050565b6000808062000573868662000685565b91509150816000036200059d57838181620005925762000592620009ff565b049250505062000533565b8382101562000654576000620005b587878762000659565b9050600080620005c7858585620006d9565b9150915081600003620005f457868181620005e657620005e6620009ff565b049550505050505062000533565b6000876200060382826200070f565b1690506000620006158484846200071d565b9050600062000636838b816200062f576200062f620009ff565b0462000774565b9050620006448282620007b9565b9850505050505050505062000533565b600080fd5b600081806200066c576200066c620009ff565b838509949350505050565b6000620005338284620009bf565b60008080620006958585620007c7565b90506000620006a58686620007b9565b9050808210620006bd579081900392509050620006d2565b6001620006cb83836200070f565b0393509150505b9250929050565b600080828410620006f1575083905081830362000707565b60001985016200070285856200070f565b915091505b935093915050565b6000620005338284620009a5565b60008062000749836200073183826200070f565b81620007415762000741620009ff565b506000919050565b90508284816200075d576200075d620009ff565b046200076a8683620007b9565b1795945050505050565b60006001815b6008811015620007b257620007a782620007a160026200079b8389620007b9565b6200070f565b620007b9565b91506001016200077a565b5092915050565b600062000533828462000a15565b60006000198284099392505050565b600060208284031215620007e957600080fd5b81516001600160a01b03811681146200053357600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000837576200083762000801565b019392505050565b600181815b808511156200088057816000190482111562000864576200086462000801565b808516156200087257918102915b93841c939080029062000844565b509250929050565b60008262000899575060016200055d565b81620008a8575060006200055d565b8160018114620008c15760028114620008cc57620008ec565b60019150506200055d565b60ff841115620008e057620008e062000801565b50506001821b6200055d565b5060208310610133831016604e8410600b841016171562000911575081810a6200055d565b6200091d83836200083f565b806000190482111562000934576200093462000801565b029392505050565b60006200053360ff84168362000888565b600060208083528351808285015260005b818110156200097c578581018301518582016040015282016200095e565b818111156200098f576000604083870101525b50601f01601f1916929092016040019392505050565b600082821015620009ba57620009ba62000801565b500390565b60008219821115620009d557620009d562000801565b500190565b60008060408385031215620009ee57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000a325762000a3262000801565b500290565b6117f08062000a476000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d4578063db1d0fd5146103dd578063dd62ed3e146103e5578063f2fde38b1461041e57600080fd5b8063a457c2d71461037e578063a9059cbb14610391578063bdfeb1e5146103a457600080fd5b80638da5cb5b116100d35780638da5cb5b1461031c57806395d89b41146103375780639dc29fac14610358578063a150da2a1461036b57600080fd5b806370a08231146102f9578063715018a61461030c578063739572891461031457600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ad57806357627e93146102e057806366666aa9146102e85780636863909e146102f157600080fd5b806332cb6b0c1461027d578063395093511461028557806340c10f191461029857600080fd5b806323b872dd116101a257806323b872dd146102415780632e0f2625146102545780632ff2e9dc1461026e578063313ce5671461027657600080fd5b806306fdde03146101c9578063095ea7b31461020857806318160ddd1461022b575b600080fd5b604080518082019091526011815270436f6d706f756e64496e7465726573744560781b60208201525b6040516101ff9190611488565b60405180910390f35b61021b6102163660046114f9565b610431565b60405190151581526020016101ff565b610233610448565b6040519081526020016101ff565b61021b61024f366004611523565b610457565b61025c601281565b60405160ff90911681526020016101ff565b6102336104fa565b601261025c565b610233610514565b61021b6102933660046114f9565b610536565b6102ab6102a63660046114f9565b610543565b005b6102c06102bb36600461155f565b6105f2565b6040805194855260208501939093529183015260608201526080016101ff565b610233601e81565b61023360065481565b6102ab610633565b61023361030736600461155f565b610775565b6102ab610780565b6102c06107b6565b6000546040516001600160a01b0390911681526020016101ff565b604080518082019091526005815264434552574560d81b60208201526101f2565b6102ab6103663660046114f9565b6108aa565b61021b610379366004611523565b6108de565b61021b61038c3660046114f9565b61096a565b61021b61039f3660046114f9565b610977565b6103ac610984565b604080519586526020860194909452928401919091526060830152608082015260a0016101ff565b61023360075481565b610233600c81565b6102336103f336600461157a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102ab61042c36600461155f565b6109a3565b600061043e338484610b4f565b5060015b92915050565b6000610452610c11565b905090565b60006001600160a01b03841633146104e4576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e25760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ef848484610c28565b5060015b9392505050565b610506601260086115c3565b61051190600a6116cc565b81565b610520601260086115c3565b61052b90600a6116cc565b61051190600a6116db565b60006104f3338484610d34565b6000546001600160a01b0316331461056d5760405162461bcd60e51b81526004016104d9906116fa565b610579601260086115c3565b61058490600a6116cc565b61058f90600a6116db565b81610598610c11565b6105a2919061172f565b11156105e45760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d9565b6105ee8282610dbb565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062a85610e12565b90509193509193565b6000600554600454436106469190611747565b6106509190611747565b9050801561077257600c5460009081906001600160a01b0316635aff34dc61067d61058e620f424061172f565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f3919061175e565b9150915060006003546107096003548585610a79565b6107139190611747565b90508060066000828254610727919061172f565b9091555064e8d4a51000905061073e818585610a3b565b6107489190611747565b60076000828254610759919061172f565b909155505060045461076b9043611747565b6005555050505b50565b600061044282610f5e565b6000546001600160a01b031633146107aa5760405162461bcd60e51b81526004016104d9906116fa565b6107b46000610f8c565b565b6000806000806107c4610fdc565b93506107e06107db6000546001600160a01b031690565b610e12565b6107ea908461172f565b600954909350610802906001600160a01b0316610e12565b61080c908461172f565b600a54909350610824906001600160a01b0316610e12565b61082e908461172f565b600b54909350610846906001600160a01b0316610e12565b610850908461172f565b9250600083851015610870576108668585611747565b9250839050610880565b61087a8486611747565b92508490505b80156108a357806108968464e8d4a510006116db565b6108a09190611798565b91505b5090919293565b6000546001600160a01b031633146108d45760405162461bcd60e51b81526004016104d9906116fa565b6105ee82826110d1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661092b5760405162461bcd60e51b81526004016104d99190611488565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ef9085908590610965908690611747565b610b4f565b60006104f33384846108de565b600061043e338484610c28565b600354600554600754600654600061099a610fdc565b90509091929394565b6000546001600160a01b031633146109cd5760405162461bcd60e51b81526004016104d9906116fa565b6001600160a01b038116610a325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d9565b61077281610f8c565b600080610a49858585610a79565b90506000610a58868686611185565b1115610a7157610a698160016111a0565b9150506104f3565b949350505050565b6000806000610a8886866111ac565b9150915081600003610aad57838181610aa357610aa3611782565b04925050506104f3565b838210156101c4576000610ac2878787611185565b9050600080610ad28585856111f9565b9150915081600003610afa57868181610aed57610aed611782565b04955050505050506104f3565b600087610b0860008a61122a565b1690506000610b18848484611236565b90506000610b34838b81610b2e57610b2e611782565b04611283565b9050610b4082826112c0565b985050505050505050506104f3565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b995760405162461bcd60e51b81526004016104d99190611488565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610be45760405162461bcd60e51b81526004016104d99190611488565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c1b610fdc565b600354610452919061172f565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c725760405162461bcd60e51b81526004016104d99190611488565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cbd5760405162461bcd60e51b81526004016104d99190611488565b506000610cc984610f5e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d155760405162461bcd60e51b81526004016104d99190611488565b50610d22848360006112cc565b610d2e838360016112cc565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d815760405162461bcd60e51b81526004016104d99190611488565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ef908590859061096590869061172f565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e055760405162461bcd60e51b81526004016104d99190611488565b506105ee828260016112cc565b6001600160a01b0381166000908152600860209081526040808320546007546002909352908320548392610e4b9164e8d4a51000610a3b565b610e559190611747565b9050600060055460045443610e6a9190611747565b610e749190611747565b600c5490915060009081906001600160a01b0316635aff34dc610e9c61058e620f424061172f565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa158015610eee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f12919061175e565b6001600160a01b03881660009081526002602052604081205492945090925090610f3d818585610a79565b610f479190611747565b9050610f53818661172f565b979650505050505050565b6000610f6982610e12565b6001600160a01b038316600090815260026020526040902054610442919061172f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060055460045443610ff09190611747565b610ffa9190611747565b600c5490915060009081906001600160a01b0316635aff34dc61102261058e620f424061172f565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa158015611074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611098919061175e565b9150915060006003546110ae6003548585610a79565b6110b89190611747565b9050806006546110c8919061172f565b94505050505090565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661111b5760405162461bcd60e51b81526004016104d99190611488565b50600061112783610f5e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111735760405162461bcd60e51b81526004016104d99190611488565b50611180838360006112cc565b505050565b6000818061119557611195611782565b838509949350505050565b60006104f3828461172f565b60008060006111bb8585611455565b905060006111c986866112c0565b90508082106111df5790819003925090506111f2565b60016111eb838361122a565b0393509150505b9250929050565b60008082841061120f5750839050818303611222565b6001850361121d858561122a565b915091505b935093915050565b60006104f38284611747565b60008061125d8361124860008661122a565b8161125557611255611782565b506000919050565b905082848161126e5761126e611782565b0461127986836112c0565b1795945050505050565b60006001815b60088110156112b9576112af826112aa60026112a586896112c0565b61122a565b6112c0565b9150600101611289565b5092915050565b60006104f382846116db565b6112d4610633565b6001600160a01b038316600090815260086020908152604080832054600754600290935290832054909161130d9164e8d4a51000610a3b565b6113179190611747565b905061132560065482611464565b6006556001600160a01b0384166000908152600260205260408120805483929061135090849061172f565b925050819055508060036000828254611369919061172f565b909155505081156113c0576001600160a01b0384166000908152600260205260408120805485929061139c90849061172f565b9250508190555082600360008282546113b5919061172f565b909155506114079050565b6001600160a01b038416600090815260026020526040812080548592906113e8908490611747565b9250508190555082600360008282546114019190611747565b90915550505b6007546001600160a01b038516600090815260026020526040902054611433919064e8d4a51000610a3b565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b60008183111561147f576114788284611747565b9050610442565b50600092915050565b600060208083528351808285015260005b818110156114b557858101830151858201604001528201611499565b818111156114c7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114f457600080fd5b919050565b6000806040838503121561150c57600080fd5b611515836114dd565b946020939093013593505050565b60008060006060848603121561153857600080fd5b611541846114dd565b925061154f602085016114dd565b9150604084013590509250925092565b60006020828403121561157157600080fd5b6104f3826114dd565b6000806040838503121561158d57600080fd5b611596836114dd565b91506115a4602084016114dd565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115e0576115e06115ad565b019392505050565b600181815b80851115611623578160001904821115611609576116096115ad565b8085161561161657918102915b93841c93908002906115ed565b509250929050565b60008261163a57506001610442565b8161164757506000610442565b816001811461165d576002811461166757611683565b6001915050610442565b60ff841115611678576116786115ad565b50506001821b610442565b5060208310610133831016604e8410600b84101617156116a6575081810a610442565b6116b083836115e8565b80600019048211156116c4576116c46115ad565b029392505050565b60006104f360ff84168361162b565b60008160001904831182151516156116f5576116f56115ad565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611742576117426115ad565b500190565b600082821015611759576117596115ad565b500390565b6000806040838503121561177157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117b557634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220309e34be1f63e910fae5af527b618831ba5d3c39834b22924798209e1d82cba664736f6c634300080e0033";

export class CompoundInterestE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundInterestE> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundInterestE>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundInterestE {
    return super.attach(address) as CompoundInterestE;
  }
  connect(signer: Signer): CompoundInterestE__factory {
    return super.connect(signer) as CompoundInterestE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundInterestEInterface {
    return new utils.Interface(_abi) as CompoundInterestEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundInterestE {
    return new Contract(address, _abi, signerOrProvider) as CompoundInterestE;
  }
}
