/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundInterest,
  CompoundInterestInterface,
} from "../CompoundInterest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021fe380380620021fe833981016040819052620000349162000845565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600862000886565b620000ee90600a620009ab565b6200014b565b5062000aa6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b8152600401620001989190620009bc565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200030f565b6000620001cb8462000450565b9050801562000238578060066000828254620001e8919062000a14565b90915550506001600160a01b038416600090815260026020526040812080548392906200021790849062000a2e565b92505081905550806003600082825462000232919062000a2e565b90915550505b811562000290576001600160a01b038416600090815260026020526040812080548592906200026990849062000a2e565b92505081905550826003600082825462000284919062000a2e565b90915550620002db9050565b6001600160a01b03841660009081526002602052604081208054859290620002ba90849062000a14565b925050819055508260036000828254620002d5919062000a14565b90915550505b600454620002ea904362000a14565b6001600160a01b03909416600090815260086020526040902060020193909355505050565b60006005546004544362000324919062000a14565b62000330919062000a14565b905080156200044d5760006006546003546200034d919062000a2e565b600c5490915060009081906001600160a01b0316635aff34dc6200037761058e620f424062000a2e565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101879052600a60648201526084016040805180830381865afa158015620003ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f0919062000a49565b915091506000836200040f8585856200058860201b62000a1e1760201c565b6200041b919062000a14565b9050806006600082825462000431919062000a2e565b909155505060045462000445904362000a14565b600555505050505b50565b6001600160a01b038116600090815260086020526040812060020154600454829182916200047f904362000a14565b6200048b919062000a14565b905080156200058157600c5460009081906001600160a01b0316635aff34dc620004bb61058e620f424062000a2e565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa1580156200050e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000534919062000a49565b6001600160a01b038816600090815260026020908152604090912054929450909250620005709082908590859062000a1e62000588821b17901c565b6200057c919062000a14565b935050505b5092915050565b60008062000598858585620005d0565b90506000620005a9868686620006c6565b1115620005c657620005bd816001620006e4565b915050620005c9565b90505b9392505050565b60008080620005e08686620006fb565b91509150816000036200060a57838181620005ff57620005ff62000a6e565b0492505050620005c9565b83821015620006c157600062000622878787620006c6565b9050600080620006348585856200074f565b9150915081600003620006615786818162000653576200065362000a6e565b0495505050505050620005c9565b60008762000670828262000785565b16905060006200068284848462000793565b90506000620006a3838b816200069c576200069c62000a6e565b04620007ea565b9050620006b1828262000828565b98505050505050505050620005c9565b600080fd5b60008180620006d957620006d962000a6e565b838509949350505050565b6000620006f2828462000a2e565b90505b92915050565b600080806200070b858562000836565b905060006200071b868662000828565b90508082106200073357908190039250905062000748565b600162000741838362000785565b0393509150505b9250929050565b6000808284106200076757508390508183036200077d565b600019850162000778858562000785565b915091505b935093915050565b6000620006f2828462000a14565b600080620007bf83620007a7838262000785565b81620007b757620007b762000a6e565b506000919050565b9050828481620007d357620007d362000a6e565b04620007e0868362000828565b1795945050505050565b60006001815b600881101562000581576200081d8262000817600262000811838962000828565b62000785565b62000828565b9150600101620007f0565b6000620006f2828462000a84565b60006000198284099392505050565b6000602082840312156200085857600080fd5b81516001600160a01b0381168114620005c957600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008a657620008a662000870565b019392505050565b600181815b80851115620008ef578160001904821115620008d357620008d362000870565b80851615620008e157918102915b93841c9390800290620008b3565b509250929050565b6000826200090857506001620006f5565b816200091757506000620006f5565b81600181146200093057600281146200093b576200095b565b6001915050620006f5565b60ff8411156200094f576200094f62000870565b50506001821b620006f5565b5060208310610133831016604e8410600b841016171562000980575081810a620006f5565b6200098c8383620008ae565b8060001904821115620009a357620009a362000870565b029392505050565b6000620006f260ff841683620008f7565b600060208083528351808285015260005b81811015620009eb57858101830151858201604001528201620009cd565b81811115620009fe576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000a295762000a2962000870565b500390565b6000821982111562000a445762000a4462000870565b500190565b6000806040838503121562000a5d57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000aa15762000aa162000870565b500290565b6117488062000ab66000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d2578063db1d0fd5146103db578063dd62ed3e146103e3578063f2fde38b1461041c57600080fd5b8063a457c2d71461037c578063a9059cbb1461038f578063bdfeb1e5146103a257600080fd5b80638da5cb5b116100d35780638da5cb5b1461031b57806395d89b41146103365780639dc29fac14610356578063a150da2a1461036957600080fd5b806370a08231146102f8578063715018a61461030b578063739572891461031357600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ac57806357627e93146102df57806366666aa9146102e75780636863909e146102f057600080fd5b806332cb6b0c1461027c578063395093511461028457806340c10f191461029757600080fd5b806323b872dd116101a257806323b872dd146102405780632e0f2625146102535780632ff2e9dc1461026d578063313ce5671461027557600080fd5b806306fdde03146101c9578063095ea7b31461020757806318160ddd1461022a575b600080fd5b60408051808201909152601081526f10dbdb5c1bdd5b99125b9d195c995cdd60821b60208201525b6040516101fe91906113e0565b60405180910390f35b61021a610215366004611451565b61042f565b60405190151581526020016101fe565b610232610446565b6040519081526020016101fe565b61021a61024e36600461147b565b610455565b61025b601281565b60405160ff90911681526020016101fe565b6102326104f8565b601261025b565b610232610512565b61021a610292366004611451565b610534565b6102aa6102a5366004611451565b610541565b005b6102bf6102ba3660046114b7565b6105f0565b6040805194855260208501939093529183015260608201526080016101fe565b610232601e81565b61023260065481565b6102aa610631565b6102326103063660046114b7565b610753565b6102aa61075e565b6102bf610794565b6000546040516001600160a01b0390911681526020016101fe565b6040805180820190915260048152634345525760e01b60208201526101f1565b6102aa610364366004611451565b61088d565b61021a61037736600461147b565b6108c1565b61021a61038a366004611451565b61094d565b61021a61039d366004611451565b61095a565b6103aa610967565b604080519586526020860194909452928401919091526060830152608082015260a0016101fe565b61023260075481565b610232600c81565b6102326103f13660046114d2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102aa61042a3660046114b7565b610986565b600061043c338484610a5c565b5060015b92915050565b6000610450610b1e565b905090565b60006001600160a01b03841633146104e2576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e05760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ed848484610b35565b5060015b9392505050565b6105046012600861151b565b61050f90600a611624565b81565b61051e6012600861151b565b61052990600a611624565b61050f90600a611633565b60006104f1338484610c41565b6000546001600160a01b0316331461056b5760405162461bcd60e51b81526004016104d790611652565b6105776012600861151b565b61058290600a611624565b61058d90600a611633565b81610596610b1e565b6105a09190611687565b11156105e25760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d7565b6105ec8282610cc8565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062885610d1f565b90509193509193565b600060055460045443610644919061169f565b61064e919061169f565b905080156107505760006006546003546106689190611687565b600c5490915060009081906001600160a01b0316635aff34dc61069061058e620f4240611687565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101879052600a60648201526084016040805180830381865afa1580156106e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070691906116b6565b91509150600083610718858585610a1e565b610722919061169f565b905080600660008282546107369190611687565b9091555050600454610748904361169f565b600555505050505b50565b600061044082610e38565b6000546001600160a01b031633146107885760405162461bcd60e51b81526004016104d790611652565b6107926000610e66565b565b6000806000806107a2610eb6565b93506107be6107b96000546001600160a01b031690565b610d1f565b6107c89084611687565b6009549093506107e0906001600160a01b0316610d1f565b6107ea9084611687565b600a54909350610802906001600160a01b0316610d1f565b61080c9084611687565b600b54909350610824906001600160a01b0316610d1f565b61082e9084611687565b925060008385101561084e57610844858561169f565b925083905061085e565b610858848661169f565b92508490505b801561088657806108798469d3c21bcecceda1000000611633565b61088391906116f0565b91505b5090919293565b6000546001600160a01b031633146108b75760405162461bcd60e51b81526004016104d790611652565b6105ec8282610fc3565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661090e5760405162461bcd60e51b81526004016104d791906113e0565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ed908590859061094890869061169f565b610a5c565b60006104f13384846108c1565b600061043c338484610b35565b600354600554600754600654600061097d610eb6565b90509091929394565b6000546001600160a01b031633146109b05760405162461bcd60e51b81526004016104d790611652565b6001600160a01b038116610a155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d7565b61075081610e66565b600080610a2c858585611077565b90506000610a3b86868661114d565b1115610a5457610a4c816001611168565b9150506104f1565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610aa65760405162461bcd60e51b81526004016104d791906113e0565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610af15760405162461bcd60e51b81526004016104d791906113e0565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b28610eb6565b6003546104509190611687565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b7f5760405162461bcd60e51b81526004016104d791906113e0565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bca5760405162461bcd60e51b81526004016104d791906113e0565b506000610bd684610e38565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c225760405162461bcd60e51b81526004016104d791906113e0565b50610c2f84836000611174565b610c3b83836001611174565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610c8e5760405162461bcd60e51b81526004016104d791906113e0565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ed9085908590610948908690611687565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d125760405162461bcd60e51b81526004016104d791906113e0565b506105ec82826001611174565b6001600160a01b03811660009081526008602052604081206002015460045482918291610d4c904361169f565b610d56919061169f565b90508015610e3157600c5460009081906001600160a01b0316635aff34dc610d8361058e620f4240611687565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df991906116b6565b6001600160a01b0388166000908152600260205260409020549193509150610e22818484610a1e565b610e2c919061169f565b935050505b5092915050565b6000610e4382610d1f565b6001600160a01b0383166000908152600260205260409020546104409190611687565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060055460045443610ecc919061169f565b610ed6919061169f565b90508015610fae576000600654600354610ef09190611687565b600c5490915060009081906001600160a01b0316635aff34dc610f1861058e620f4240611687565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101879052600a60648201526084016040805180830381865afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e91906116b6565b9150915082610f9e848484610a1e565b610fa8919061169f565b94505050505b81600654610fbc9190611687565b9250505090565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661100d5760405162461bcd60e51b81526004016104d791906113e0565b50600061101983610e38565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110655760405162461bcd60e51b81526004016104d791906113e0565b5061107283836000611174565b505050565b600080600061108686866112b8565b91509150816000036110ab578381816110a1576110a16116da565b04925050506104f1565b838210156101c45760006110c087878761114d565b90506000806110d0858585611305565b91509150816000036110f8578681816110eb576110eb6116da565b04955050505050506104f1565b60008761110660008a611336565b1690506000611116848484611342565b90506000611132838b8161112c5761112c6116da565b0461138f565b905061113e82826113c5565b985050505050505050506104f1565b6000818061115d5761115d6116da565b838509949350505050565b60006104f18284611687565b61117c610631565b600061118784610d1f565b905080156111ed5780600660008282546111a1919061169f565b90915550506001600160a01b038416600090815260026020526040812080548392906111ce908490611687565b9250508190555080600360008282546111e79190611687565b90915550505b811561123f576001600160a01b0384166000908152600260205260408120805485929061121b908490611687565b9250508190555082600360008282546112349190611687565b909155506112869050565b6001600160a01b0384166000908152600260205260408120805485929061126790849061169f565b925050819055508260036000828254611280919061169f565b90915550505b600454611293904361169f565b6001600160a01b03909416600090815260086020526040902060020193909355505050565b60008060006112c785856113d1565b905060006112d586866113c5565b90508082106112eb5790819003925090506112fe565b60016112f78383611336565b0393509150505b9250929050565b60008082841061131b575083905081830361132e565b600185036113298585611336565b915091505b935093915050565b60006104f1828461169f565b60008061136983611354600086611336565b81611361576113616116da565b506000919050565b905082848161137a5761137a6116da565b0461138586836113c5565b1795945050505050565b60006001815b6008811015610e31576113bb826113b660026113b186896113c5565b611336565b6113c5565b9150600101611395565b60006104f18284611633565b60006000198284099392505050565b600060208083528351808285015260005b8181101561140d578581018301518582016040015282016113f1565b8181111561141f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461144c57600080fd5b919050565b6000806040838503121561146457600080fd5b61146d83611435565b946020939093013593505050565b60008060006060848603121561149057600080fd5b61149984611435565b92506114a760208501611435565b9150604084013590509250925092565b6000602082840312156114c957600080fd5b6104f182611435565b600080604083850312156114e557600080fd5b6114ee83611435565b91506114fc60208401611435565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561153857611538611505565b019392505050565b600181815b8085111561157b57816000190482111561156157611561611505565b8085161561156e57918102915b93841c9390800290611545565b509250929050565b60008261159257506001610440565b8161159f57506000610440565b81600181146115b557600281146115bf576115db565b6001915050610440565b60ff8411156115d0576115d0611505565b50506001821b610440565b5060208310610133831016604e8410600b84101617156115fe575081810a610440565b6116088383611540565b806000190482111561161c5761161c611505565b029392505050565b60006104f160ff841683611583565b600081600019048311821515161561164d5761164d611505565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561169a5761169a611505565b500190565b6000828210156116b1576116b1611505565b500390565b600080604083850312156116c957600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261170d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c41d554df3c9a29623d70ff1881bfbb3589937509ee9bbb916439bd3961382d664736f6c634300080e0033";

export class CompoundInterest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundInterest> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundInterest>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundInterest {
    return super.attach(address) as CompoundInterest;
  }
  connect(signer: Signer): CompoundInterest__factory {
    return super.connect(signer) as CompoundInterest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundInterestInterface {
    return new utils.Interface(_abi) as CompoundInterestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundInterest {
    return new Contract(address, _abi, signerOrProvider) as CompoundInterest;
  }
}
