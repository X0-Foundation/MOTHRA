/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IKeep3rJobFundableCredits,
  IKeep3rJobFundableCreditsInterface,
} from "../IKeep3rJobFundableCredits";

const _abi = [
  {
    inputs: [],
    name: "InsufficientJobTokenCredits",
    type: "error",
  },
  {
    inputs: [],
    name: "JobTokenCreditsLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenUnallowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokenCreditAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokenCreditWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addTokenCreditsToJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "jobTokenCreditsAddedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "withdrawTokenCreditsFromJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IKeep3rJobFundableCredits__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rJobFundableCreditsInterface {
    return new utils.Interface(_abi) as IKeep3rJobFundableCreditsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rJobFundableCredits {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IKeep3rJobFundableCredits;
  }
}
