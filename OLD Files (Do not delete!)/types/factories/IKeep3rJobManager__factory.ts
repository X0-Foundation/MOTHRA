/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IKeep3rJobManager,
  IKeep3rJobManagerInterface,
} from "../IKeep3rJobManager";

const _abi = [
  {
    inputs: [],
    name: "AlreadyAKeeper",
    type: "error",
  },
  {
    inputs: [],
    name: "JobAlreadyAdded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_jobOwner",
        type: "address",
      },
    ],
    name: "JobAddition",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "addJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IKeep3rJobManager__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rJobManagerInterface {
    return new utils.Interface(_abi) as IKeep3rJobManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rJobManager {
    return new Contract(address, _abi, signerOrProvider) as IKeep3rJobManager;
  }
}
