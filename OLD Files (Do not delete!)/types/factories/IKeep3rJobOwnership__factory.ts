/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IKeep3rJobOwnership,
  IKeep3rJobOwnershipInterface,
} from "../IKeep3rJobOwnership";

const _abi = [
  {
    inputs: [],
    name: "OnlyJobOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyPendingJobOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "JobOwnershipAssent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_pendingOwner",
        type: "address",
      },
    ],
    name: "JobOwnershipChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "acceptJobOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeJobOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "jobOwner",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "jobPendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "_pendingOwner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IKeep3rJobOwnership__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rJobOwnershipInterface {
    return new utils.Interface(_abi) as IKeep3rJobOwnershipInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rJobOwnership {
    return new Contract(address, _abi, signerOrProvider) as IKeep3rJobOwnership;
  }
}
