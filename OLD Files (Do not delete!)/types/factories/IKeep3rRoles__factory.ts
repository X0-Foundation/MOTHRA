/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IKeep3rRoles, IKeep3rRolesInterface } from "../IKeep3rRoles";

const _abi = [
  {
    inputs: [],
    name: "DisputerExistent",
    type: "error",
  },
  {
    inputs: [],
    name: "DisputerUnexistent",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDisputer",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlySlasher",
    type: "error",
  },
  {
    inputs: [],
    name: "SlasherExistent",
    type: "error",
  },
  {
    inputs: [],
    name: "SlasherUnexistent",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_disputer",
        type: "address",
      },
    ],
    name: "DisputerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_disputer",
        type: "address",
      },
    ],
    name: "DisputerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_slasher",
        type: "address",
      },
    ],
    name: "SlasherAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_slasher",
        type: "address",
      },
    ],
    name: "SlasherRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_disputer",
        type: "address",
      },
    ],
    name: "addDisputer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slasher",
        type: "address",
      },
    ],
    name: "addSlasher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_disputer",
        type: "address",
      },
    ],
    name: "disputers",
    outputs: [
      {
        internalType: "bool",
        name: "_isDisputer",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_disputer",
        type: "address",
      },
    ],
    name: "removeDisputer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slasher",
        type: "address",
      },
    ],
    name: "removeSlasher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slasher",
        type: "address",
      },
    ],
    name: "slashers",
    outputs: [
      {
        internalType: "bool",
        name: "_isSlasher",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IKeep3rRoles__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rRolesInterface {
    return new utils.Interface(_abi) as IKeep3rRolesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rRoles {
    return new Contract(address, _abi, signerOrProvider) as IKeep3rRoles;
  }
}
