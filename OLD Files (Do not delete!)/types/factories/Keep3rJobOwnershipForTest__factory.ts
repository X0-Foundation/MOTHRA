/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Keep3rJobOwnershipForTest,
  Keep3rJobOwnershipForTestInterface,
} from "../Keep3rJobOwnershipForTest";

const _abi = [
  {
    inputs: [],
    name: "OnlyJobOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyPendingJobOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "JobOwnershipAssent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_pendingOwner",
        type: "address",
      },
    ],
    name: "JobOwnershipChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "acceptJobOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeJobOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "jobOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "jobPendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063594a3a931461005157806359a2255e14610066578063878c723e1461007957806398e90a0f146100be575b600080fd5b61006461005f366004610257565b6100e7565b005b61006461007436600461028a565b61018b565b6100a261008736600461028a565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100a26100cc36600461028a565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b03828116600090815260208190526040902054839116331461012357604051636efb4f4160e11b815260040160405180910390fd5b6001600160a01b03838116600081815260016020908152604080832080546001600160a01b0319168887169081179091559183905280832054905191941692917fa8bad3f0b781e1d954af9945167d5f80bfe5e57930f17c93843187c77557a6b891a4505050565b6001600160a01b0381811660009081526001602052604090205482911633146101c75760405163cfe9663360e01b815260040160405180910390fd5b6001600160a01b0382811660008181526020818152604080832080546001909352818420805487166001600160a01b031980861691909117909255805490911690555193169283929133917fcf30c54296d5eee76168b564c59c50578d49c271733a470f32707c8cfbc88a8b9190a4505050565b80356001600160a01b038116811461025257600080fd5b919050565b6000806040838503121561026a57600080fd5b6102738361023b565b91506102816020840161023b565b90509250929050565b60006020828403121561029c57600080fd5b6102a58261023b565b939250505056fea2646970667358221220d816a66e3010fd1043d96f1c6bb3ca4056f8a151c94602dbd54fd86630995e2a64736f6c634300080e0033";

export class Keep3rJobOwnershipForTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Keep3rJobOwnershipForTest> {
    return super.deploy(overrides || {}) as Promise<Keep3rJobOwnershipForTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Keep3rJobOwnershipForTest {
    return super.attach(address) as Keep3rJobOwnershipForTest;
  }
  connect(signer: Signer): Keep3rJobOwnershipForTest__factory {
    return super.connect(signer) as Keep3rJobOwnershipForTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Keep3rJobOwnershipForTestInterface {
    return new utils.Interface(_abi) as Keep3rJobOwnershipForTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Keep3rJobOwnershipForTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Keep3rJobOwnershipForTest;
  }
}
