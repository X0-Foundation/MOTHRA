/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Referral, ReferralInterface } from "../Referral";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "OperatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commission",
        type: "uint256",
      },
    ],
    name: "ReferralCommissionRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "ReferralRecorded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "countReferrals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_debit",
        type: "uint256",
      },
    ],
    name: "debitOutstandingCommission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "getOutstandingCommission",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getReferrer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "outstandingCommissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "recordReferral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_commission",
        type: "uint256",
      },
    ],
    name: "recordReferralCommission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "referrers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_payer",
        type: "address",
      },
    ],
    name: "setPayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalReferralCommissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107d88061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c5780639ecfc6ea116100665780639ecfc6ea1461022c578063d55e69751461024c578063dc1694b81461025f578063f2fde38b1461027257600080fd5b8063715018a6146101f3578063898ee259146101fb5780638da5cb5b1461021b57600080fd5b806337e59e6e116100c857806337e59e6e1461016257806338cc3d52146101755780634a3b68cc1461019e5780634a9fefc7146101c757600080fd5b80630c7f7b6b146100ef578063123119cd146101045780631b6215f214610134575b600080fd5b6101026100fd3660046106a9565b610285565b005b600554610117906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101546101423660046106dc565b60046020526000908152604090205481565b60405190815260200161012b565b6101026101703660046106fe565b610379565b6101546101833660046106dc565b6001600160a01b031660009081526004602052604090205490565b6101176101ac3660046106dc565b6001602052600090815260409020546001600160a01b031681565b6101176101d53660046106dc565b6001600160a01b039081166000908152600160205260409020541690565b610102610421565b6101546102093660046106dc565b60026020526000908152604090205481565b6000546001600160a01b0316610117565b61015461023a3660046106dc565b60036020526000908152604090205481565b61010261025a3660046106dc565b610457565b61010261026d3660046106fe565b6104a3565b6101026102803660046106dc565b6105a2565b6005546001600160a01b0316336001600160a01b0316146102ed5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792070617965722063616e207265636f7264207265666572726572730060448201526064015b60405180910390fd5b6001600160a01b03828116600090815260016020818152604080842080546001600160a01b031916958716958617905593835260029052918120805490919061033790849061073e565b90915550506040516001600160a01b0380831691908416907ff61ccbe316daff56654abed758191f9a4dcac526d43747a50a2d545c0ca64d8290600090a35050565b6005546001600160a01b0316336001600160a01b0316146103f05760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c792070617965722063616e206465626974206f75747374616e64696e6760448201526a1031b7b6b6b4b9b9b4b7b760a91b60648201526084016102e4565b6001600160a01b03821660009081526004602052604081208054839290610418908490610756565b90915550505050565b6000546001600160a01b0316331461044b5760405162461bcd60e51b81526004016102e49061076d565b610455600061063d565b565b6000546001600160a01b031633146104815760405162461bcd60e51b81526004016102e49061076d565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0316336001600160a01b0316146105065760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792070617965722063616e207265636f726420636f6d6d697373696f6e60448201526064016102e4565b6001600160a01b0382166000908152600360205260408120805483929061052e90849061073e565b90915550506001600160a01b0382166000908152600460205260408120805483929061055b90849061073e565b90915550506040518181526001600160a01b038316907f91badd4ef769cf56b7db0b350b95c9fb6d973e6e37d28a51fed219cc7d53184f9060200160405180910390a25050565b6000546001600160a01b031633146105cc5760405162461bcd60e51b81526004016102e49061076d565b6001600160a01b0381166106315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e4565b61063a8161063d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146106a457600080fd5b919050565b600080604083850312156106bc57600080fd5b6106c58361068d565b91506106d36020840161068d565b90509250929050565b6000602082840312156106ee57600080fd5b6106f78261068d565b9392505050565b6000806040838503121561071157600080fd5b61071a8361068d565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561075157610751610728565b500190565b60008282101561076857610768610728565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220e6adc0f415231859eb6c2fb21519dfd5f47a248c7cc43558342e87b80e7864a064736f6c634300080e0033";

export class Referral__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Referral> {
    return super.deploy(overrides || {}) as Promise<Referral>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Referral {
    return super.attach(address) as Referral;
  }
  connect(signer: Signer): Referral__factory {
    return super.connect(signer) as Referral__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralInterface {
    return new utils.Interface(_abi) as ReferralInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Referral {
    return new Contract(address, _abi, signerOrProvider) as Referral;
  }
}
