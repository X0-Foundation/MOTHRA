/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleInterestN,
  SimpleInterestNInterface,
} from "../SimpleInterestN";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestNet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnDone",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6238038062001a6283398101604081905262000034916200048f565b6200003f33620000fb565b600d80546001600160a01b0383166001600160a01b031991821617909155436004556006805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600780548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600880549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620004d0565b620000ee90600a620005f7565b6200014b565b50620006da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000608565b60405180910390fd5b50620001b082826001620001b4565b5050565b6001600160a01b0383166000908152600260205260408120546009805491929091620001e290849062000660565b90915550506001600160a01b038316600090815260056020526040812060010154600a8054919290916200021890849062000660565b90915550506004546200022c904362000660565b600c5560006200023c84620003f5565b9050801562000290576001600160a01b038416600090815260056020526040812080548392906200026f9084906200067a565b9250508190555080600b60008282546200028a91906200067a565b90915550505b6004546200029f904362000660565b6001600160a01b038516600090815260056020526040902060020155811562000313576001600160a01b03841660009081526002602052604081208054859290620002ec9084906200067a565b9250508190555082600360008282546200030791906200067a565b909155506200035e9050565b6001600160a01b038416600090815260026020526040812080548592906200033d90849062000660565b92505081905550826003600082825462000358919062000660565b90915550505b6001600160a01b03841660009081526002602052604081205460098054919283926200038c9084906200067a565b9091555050600454600090620003a3904362000660565b90506000620003b3828462000695565b905080600a6000828254620003c991906200067a565b90915550506001600160a01b039096166000908152600560205260409020600101959095555050505050565b6001600160a01b03811660009081526005602052604081206002015460045482919062000423904362000660565b6200042f919062000660565b6001600160a01b038416600090815260026020526040902054909150600a90620f4240908390620004649061058e9062000695565b62000470919062000695565b6200047c9190620006b7565b620004889190620006b7565b9392505050565b600060208284031215620004a257600080fd5b81516001600160a01b03811681146200048857600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620004f057620004f0620004ba565b019392505050565b600181815b80851115620005395781600019048211156200051d576200051d620004ba565b808516156200052b57918102915b93841c9390800290620004fd565b509250929050565b6000826200055257506001620005f1565b816200056157506000620005f1565b81600181146200057a57600281146200058557620005a5565b6001915050620005f1565b60ff841115620005995762000599620004ba565b50506001821b620005f1565b5060208310610133831016604e8410600b8410161715620005ca575081810a620005f1565b620005d68383620004f8565b8060001904821115620005ed57620005ed620004ba565b0290505b92915050565b60006200048860ff84168362000541565b600060208083528351808285015260005b81811015620006375785810183015185820160400152820162000619565b818111156200064a576000604083870101525b50601f01601f1916929092016040019392505050565b600082821015620006755762000675620004ba565b500390565b60008219821115620006905762000690620004ba565b500190565b6000816000190483118215151615620006b257620006b2620004ba565b500290565b600082620006d557634e487b7160e01b600052601260045260246000fd5b500490565b61137880620006ea6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a150da2a1161007c578063a150da2a14610301578063a457c2d714610314578063a9059cbb14610327578063bdfeb1e51461033a578063dd62ed3e1461036f578063f2fde38b146103a857600080fd5b806370a082311461026f578063715018a614610282578063739572891461028a5780638da5cb5b146102b257806395d89b41146102cd5780639dc29fac146102ee57600080fd5b80632ff2e9dc116101155780632ff2e9dc146101f5578063313ce567146101fd57806332cb6b0c14610204578063395093511461020c57806340c10f191461021f578063416ae7681461023457600080fd5b806306fdde0314610152578063095ea7b31461018f57806318160ddd146101b257806323b872dd146101c85780632e0f2625146101db575b600080fd5b60408051808201909152600f81526e29b4b6b83632a4b73a32b932b9ba2760891b60208201525b604051610186919061104a565b60405180910390f35b6101a261019d3660046110bb565b6103bb565b6040519015158152602001610186565b6101ba6103d2565b604051908152602001610186565b6101a26101d63660046110e5565b6103e2565b6101e3601281565b60405160ff9091168152602001610186565b6101ba610484565b60126101e3565b6101ba61049e565b6101a261021a3660046110bb565b6104c0565b61023261022d3660046110bb565b6104d4565b005b610247610242366004611121565b610584565b604080519586526020860194909452928401919091526060830152608082015260a001610186565b6101ba61027d366004611121565b6105e8565b610232610606565b61029261063c565b604080519485526020850193909352918301526060820152608001610186565b6000546040516001600160a01b039091168152602001610186565b60408051808201909152600581526429a2a92ba760d91b6020820152610179565b6102326102fc3660046110bb565b610769565b6101a261030f3660046110e5565b61079d565b6101a26103223660046110bb565b610829565b6101a26103353660046110bb565b610836565b610342610843565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610186565b6101ba61037d36600461113c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102326103b6366004611121565b610879565b60006103c8338484610914565b5060015b92915050565b60006103dd60035490565b905090565b60006001600160a01b038416331461046f576001600160a01b03841660009081526001602090815260408083203384529091529020548281101561046d5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b61047a8484846109d6565b5060019392505050565b61049060126008611185565b61049b90600a61128e565b81565b6104aa60126008611185565b6104b590600a61128e565b61049b90600a61129d565b60006104cd338484610af0565b9392505050565b6000546001600160a01b031633146104fe5760405162461bcd60e51b8152600401610464906112bc565b61050a60126008611185565b61051590600a61128e565b61052090600a61129d565b8161052a60035490565b61053491906112f1565b11156105765760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b6044820152606401610464565b6105808282610b77565b5050565b6001600160a01b0381166000908152600260205260408120546004549091908190819081906105b39043611309565b92506105be86610bce565b6001600160a01b039096166000908152600560205260409020600201549496939592949293915050565b6001600160a01b0381166000908152600260205260408120546103cc565b6000546001600160a01b031633146106305760405162461bcd60e51b8152600401610464906112bc565b61063a6000610c55565b565b60008060008061064a610ca5565b93506106666106616000546001600160a01b031690565b610bce565b61067090846112f1565b600654909350610688906001600160a01b0316610bce565b61069290846112f1565b6007549093506106aa906001600160a01b0316610bce565b6106b490846112f1565b6008549093506106cc906001600160a01b0316610bce565b6106d690846112f1565b92506000838510156106f6576106ec8585611309565b9250839050610706565b6107008486611309565b92508490505b801561073257806107218469d3c21bcecceda100000061129d565b61072b9190611320565b9150610762565b6107626040518060400160405280600f81526020016e070656e6469675f6d6178203d3d203608c1b815250610d00565b5090919293565b6000546001600160a01b031633146107935760405162461bcd60e51b8152600401610464906112bc565b6105808282610d43565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166107ea5760405162461bcd60e51b8152600401610464919061104a565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047a9085908590610824908690611309565b610914565b60006104cd33848461079d565b60006103c83384846109d6565b600354600954600a54600454600090819081906108609043611309565b925061086a610ca5565b9150600b549050909192939495565b6000546001600160a01b031633146108a35760405162461bcd60e51b8152600401610464906112bc565b6001600160a01b0381166109085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610464565b61091181610c55565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03841661095e5760405162461bcd60e51b8152600401610464919061104a565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166109a95760405162461bcd60e51b8152600401610464919061104a565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a205760405162461bcd60e51b8152600401610464919061104a565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a6b5760405162461bcd60e51b8152600401610464919061104a565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610ad15760405162461bcd60e51b8152600401610464919061104a565b50610ade84836000610e05565b610aea83836001610e05565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610b3d5760405162461bcd60e51b8152600401610464919061104a565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047a90859085906108249086906112f1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bc15760405162461bcd60e51b8152600401610464919061104a565b5061058082826001610e05565b6001600160a01b038116600090815260056020526040812060020154600454829190610bfa9043611309565b610c049190611309565b6001600160a01b038416600090815260026020526040902054909150600a90620f4240908390610c379061058e9061129d565b610c41919061129d565b610c4b9190611320565b6104cd9190611320565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610cb69190611309565b9050600a620f424061058e600a5484600954610cd2919061129d565b610cdc9190611309565b610ce6919061129d565b610cf09190611320565b610cfa9190611320565b91505090565b61091181604051602401610d14919061104a565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611025565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d8d5760405162461bcd60e51b8152600401610464919061104a565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610df35760405162461bcd60e51b8152600401610464919061104a565b50610e0083836000610e05565b505050565b6001600160a01b0383166000908152600260205260408120546009805491929091610e31908490611309565b90915550506001600160a01b038316600090815260056020526040812060010154600a805491929091610e65908490611309565b9091555050600454610e779043611309565b600c556000610e8584610bce565b90508015610ed4576001600160a01b03841660009081526005602052604081208054839290610eb59084906112f1565b9250508190555080600b6000828254610ece91906112f1565b90915550505b600454610ee19043611309565b6001600160a01b0385166000908152600560205260409020600201558115610f4f576001600160a01b03841660009081526002602052604081208054859290610f2b9084906112f1565b925050819055508260036000828254610f4491906112f1565b90915550610f969050565b6001600160a01b03841660009081526002602052604081208054859290610f77908490611309565b925050819055508260036000828254610f909190611309565b90915550505b6001600160a01b0384166000908152600260205260408120546009805491928392610fc29084906112f1565b9091555050600454600090610fd79043611309565b90506000610fe5828461129d565b905080600a6000828254610ff991906112f1565b90915550506001600160a01b039096166000908152600560205260409020600101959095555050505050565b6109118160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060208083528351808285015260005b818110156110775785810183015185820160400152820161105b565b81811115611089576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146110b657600080fd5b919050565b600080604083850312156110ce57600080fd5b6110d78361109f565b946020939093013593505050565b6000806000606084860312156110fa57600080fd5b6111038461109f565b92506111116020850161109f565b9150604084013590509250925092565b60006020828403121561113357600080fd5b6104cd8261109f565b6000806040838503121561114f57600080fd5b6111588361109f565b91506111666020840161109f565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156111a2576111a261116f565b019392505050565b600181815b808511156111e55781600019048211156111cb576111cb61116f565b808516156111d857918102915b93841c93908002906111af565b509250929050565b6000826111fc575060016103cc565b81611209575060006103cc565b816001811461121f576002811461122957611245565b60019150506103cc565b60ff84111561123a5761123a61116f565b50506001821b6103cc565b5060208310610133831016604e8410600b8410161715611268575081810a6103cc565b61127283836111aa565b80600019048211156112865761128661116f565b029392505050565b60006104cd60ff8416836111ed565b60008160001904831182151516156112b7576112b761116f565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156113045761130461116f565b500190565b60008282101561131b5761131b61116f565b500390565b60008261133d57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204273a568daf207f1e058937be4baa4e48a2804589d42b1099c6caf69ff670d0964736f6c634300080e0033";

export class SimpleInterestN__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleInterestN> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<SimpleInterestN>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleInterestN {
    return super.attach(address) as SimpleInterestN;
  }
  connect(signer: Signer): SimpleInterestN__factory {
    return super.connect(signer) as SimpleInterestN__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleInterestNInterface {
    return new utils.Interface(_abi) as SimpleInterestNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleInterestN {
    return new Contract(address, _abi, signerOrProvider) as SimpleInterestN;
  }
}
